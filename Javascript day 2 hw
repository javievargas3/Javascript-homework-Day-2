//=======Exercise #2=========//
/*
Write an object prototype for a Person that has a name and age, has a
printInfo method, and also has a method that 
increments the persons age by 1 each time the method is called.
Create two people using the 'new' keyword, and print 
both of their infos and increment one persons
age by 3 years. Use an arrow function for both methods
*/
// Create our Person Prototype
// Use an arrow to create the printInfo method



//==========Exercise #1 ===========//
/*
Write a function that parses through the below object and displays all of their
favorite food dishes as shown:
*/

let person3 = {
    pizza:["Deep Dish","South Side Thin Crust"],
    tacos:"Anything not from Taco bell",
    burgers:"Portillos Burgers",
    ice_cream:["Chocolate","Vanilla","Oreo"],
    shakes:[{
        oberwise:"Chocolate",
        dunkin:"Vanilla",
        culvers:"All of them",
        mcDonalds:"Sham-rock-shake",
        cupids_candies:"Chocolate Malt"
    }]
}


function fav_food(person3){
    for (let i=0; i< Object.values(person3).length; i++){
        if (i <=3){
            console.log(Object.values(person3)[i])
        } 
        else {
            for (let i=0; i< Object.values(person3['shakes']).length; i++){
            return (Object.values(person3['shakes'][i]))
        }
    }
}}

console.log(fav_food(person3))






// Create another arrow function for the addAge method that takes a single parameter
// Adding to the age 


function Person(name, age) {
    this.name = name;
    this.age = age;

    this.printInfo = () => {
        return `Your name is ${this.name}, You are ${this.age} years old`
    }
    this.addage = () => {
        return (age+1)
    }
    this.Adddage = (number) => {
      return (age + number)
    }

}

let new_person = new Person('Max', 5);
console.log(new_person.printInfo())
console.log(new_person.addage())

console.log(new_person.Adddage(3))

let new_person2 = new Person('Sam', 2);
console.log(new_person2.printInfo())
console.log(new_person2.addage())





const Stringcheck = (string) => {
    return new Promise( (resolve,reject) => {
        if(string.length > 10){
            resolve(true)
            
        } else {
            reject(false)
        }
    })
}

Stringcheck ('Hellooooo')
.then( (result) => {
    console.log(`Big Word ${result}`)})
    
.catch( (error) => {
    console.log(`Samll Word ${error}`)})
    
    
    
    
    
    
    
    
    
